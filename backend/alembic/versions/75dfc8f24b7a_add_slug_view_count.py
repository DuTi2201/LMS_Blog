"""add_slug_view_count

Revision ID: 75dfc8f24b7a
Revises: dddb98937758
Create Date: 2025-06-27 23:17:45.889289

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '75dfc8f24b7a'
down_revision: Union[str, None] = 'dddb98937758'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add slug column as nullable first
    op.add_column('blog_posts', sa.Column('slug', sa.String(length=500), nullable=True))
    op.add_column('blog_posts', sa.Column('view_count', sa.Integer(), nullable=False, server_default='0'))
    
    # Update existing records with slug values based on title
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE blog_posts 
        SET slug = LOWER(REPLACE(REPLACE(title, ' ', '-'), '''', ''))
        WHERE slug IS NULL
    """))
    
    # Now make slug NOT NULL and add unique constraint
    op.alter_column('blog_posts', 'slug', nullable=False)
    op.create_unique_constraint(None, 'blog_posts', ['slug'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'blog_posts', type_='unique')
    op.drop_column('blog_posts', 'view_count')
    op.drop_column('blog_posts', 'slug')
    # ### end Alembic commands ###
